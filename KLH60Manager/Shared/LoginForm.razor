@page "/login"
@using Newtonsoft.Json
<div class="login-form">
    <EditForm Model="login" OnValidSubmit="LogMeIn">
        <h2 class="text-center">Log in</h2>
        <div class="form-group">
            <InputText class="form-control" placeholder="Username" @bind-Value="login.Email" />
        </div>
        <div class="form-group">
            <InputText type="password" class="form-control" placeholder="Password" @bind-Value="login.Password" />
        </div>
        <div class="form-group">
            <button type="submit" class="btn btn-primary btn-block">Log in</button>
        </div>
    </EditForm>
</div>

@code {
    private Login login { get; set; }
    private string result { get; set; }
    [Inject]
    private NavigationManager _nav { get; set; }
    [Inject]
    private ISessionStorageService Session { get; set; }

    protected override void OnInitialized()
    {
        login = new();
    }

    private async Task LogMeIn()
    {
        HttpResponseMessage res;
        try
        {
            res = await login.LogIntoSystem();
            switch (res.StatusCode)
            {
                case HttpStatusCode.OK:

                    string user = JsonConvert.DeserializeObject<string>(await res.Content.ReadAsStringAsync()); 
                    await Session.SetItemAsStringAsync("username",user);
                    _nav.NavigateTo("/products", true);
                    break;

                case HttpStatusCode.BadRequest:
                case HttpStatusCode.InternalServerError:
                    string err = await res.Content.ReadAsStringAsync();
                    result = err.Substring(err.IndexOf(":") + 1, err.IndexOf("\r\n") - err.IndexOf(":"));
                    break;
            }
        }
        catch (Exception e)
        {
            result = e.Message;
        }
    }
}